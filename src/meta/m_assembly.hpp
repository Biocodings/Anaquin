#ifndef GI_M_ASSEMBLY_HPP
#define GI_M_ASSEMBLY_HPP

#include "analyzer.hpp"

namespace Spike
{
    struct Contig
    {
        BasePair l;
        std::string id;
        std::string seq;
    };
    
    struct DNStats
    {
        std::vector<Contig> contigs;
        
        BasePair min, max;
        BasePair mean, sum;
        BasePair N20, N50, N80;
    };
    
    struct DNAsssembly
    {
        static DNStats stats(const std::string &file);
    };
    
    struct MAssemblyStats
    {
        DNStats ds;
    };

    struct Node
    {
        std::string id;

        // The sequin that the node has been aligned to, empty if not aligned
        std::string sequin;

        // Coverage of the node
        double cov;
    };

    struct Velvet
    {
        struct VelvetStats
        {
            std::vector<Node> nodes;
        };

        static VelvetStats analyze(const std::string &contig, const std::string &blat);
    };
    
    struct MAssembly
    {
        struct Options : public SingleMixtureOptions
        {
            // An optional PSL file generated by BLAST
            std::string psl;
        };

        static MAssemblyStats analyze(const std::string &file, const Options &options = Options());
    };
}

#endif